
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "GIMP"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('GIMP')
Loading required package: tidyverse
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: valr
Loading required package: reshape2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: pheatmap
Loading required package: viridisLite
Loading required package: ggplotify
Loading required package: shiny
Loading required package: plotly

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout

Loading required package: BiocManager
Bioconductor version '3.19' is out-of-date; the current release version '3.20'
  is available with R version '4.4'; see https://bioconductor.org/install
Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
Thank you for using the GIMP package. Dont forget to cite us!
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("DMRs.hg19")
> ### * DMRs.hg19
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DMRs.hg19
> ### Title: Imprinted Regions
> ### Aliases: DMRs.hg19
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(DMRs.hg19)
> head(DMRs.hg19)
  chrom     start       end               ICR
1  chr1  40024626  40025540     PPIEL:Ex1-DMR
2  chr1  68515433  68517545    DIRAS3:TSS-DMR
3  chr1  68512505  68513486    DIRAS3:Ex2-DMR
4  chr2 207066967 207069445   GPR1-AS:TSS-DMR
5  chr2 207114583 207136544 ZDBF2/GPR1:IG-DMR
6  chr4  89618184  89619237    NAP1L5:TSS-DMR
> 
> 
> 
> cleanEx()
> nameEx("DMRs.hg38")
> ### * DMRs.hg38
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DMRs.hg38
> ### Title: Imprinted Regions
> ### Aliases: DMRs.hg38
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(DMRs.hg38)
> head(DMRs.hg38)
  chrom     start       end               ICR
1  chr1  39558954  39559868     PPIEL:Ex1-DMR
2  chr1  68049750  68051862    DIRAS3:TSS-DMR
3  chr1  68046822  68047803    DIRAS3:Ex2-DMR
4  chr2 206202243 206204721   GPR1-AS:TSS-DMR
5  chr2 206249859 206271820 ZDBF2/GPR1:IG-DMR
6  chr4  88697033  88698086    NAP1L5:TSS-DMR
> 
> 
> 
> cleanEx()
> nameEx("bed450k")
> ### * bed450k
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bed450k
> ### Title: BED 450K probes
> ### Aliases: bed450k
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(bed450k)
> head(bed450k)
  chrom    start      end    probeID
1  chrY  9363356  9363356 cg00050873
2  chrY 21239348 21239348 cg00212031
3  chrY  8148233  8148233 cg00213748
4  chrY 15815688 15815688 cg00214611
5  chrY  9385539  9385539 cg00455876
6  chrY  6778695  6778695 cg01707559
> 
> 
> 
> cleanEx()
> nameEx("bedEPICv1")
> ### * bedEPICv1
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bedEPICv1
> ### Title: BED EPICv1 probes
> ### Aliases: bedEPICv1
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(bedEPICv1)
> head(bedEPICv1)
  chrom     start       end    probeID
1 chr20  61847650  61847650 cg18478105
2  chrX  24072640  24072640 cg09835024
3  chr9 131463936 131463936 cg14361672
4 chr17  80159506  80159506 cg01763666
5 chr14 105176736 105176736 cg12950382
6 chr13 115000168 115000168 cg02115394
> 
> 
> 
> cleanEx()
> nameEx("bedEPICv2")
> ### * bedEPICv2
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bedEPICv2
> ### Title: BED EPICv2 probes
> ### Aliases: bedEPICv2
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(bedEPICv2)
> head(bedEPICv2)
  chrom     start       end    probeID
1 chr20  61847650  61847650 cg18478105
2  chrX  24072640  24072640 cg09835024
3  chr9 131463936 131463936 cg14361672
4 chr17  80159506  80159506 cg01763666
5 chr14 105176736 105176736 cg12950382
6 chr13 115000168 115000168 cg02115394
> 
> 
> 
> cleanEx()
> nameEx("create_bedmeth")
> ### * create_bedmeth
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: create_bedmeth
> ### Title: Create BED File Data from Methylation Array Annotations
> ### Aliases: create_bedmeth
> 
> ### ** Examples
> 
> # Create BED-format data with the default version (EPIC v1)
> bed_data <- create_bedmeth()
Loading required package: minfi
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:plotly’:

    rename

The following object is masked from ‘package:valr’:

    values

The following objects are masked from ‘package:lubridate’:

    second, second<-

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    I, expand.grid, unname

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:plotly’:

    slice

The following object is masked from ‘package:lubridate’:

    %within%

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

The following object is masked from ‘package:purrr’:

    reduce

Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘XVector’

The following object is masked from ‘package:purrr’:

    compact


Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: bumphunter
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: locfit
locfit 1.5-9.10 	 2024-06-24

Attaching package: ‘locfit’

The following object is masked from ‘package:purrr’:

    none


Attaching package: ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’

The following objects are masked from ‘package:IlluminaHumanMethylation450kanno.ilmn12.hg19’:

    Islands.UCSC, Locations, Manifest, Other, SNPs.132CommonSingle,
    SNPs.135CommonSingle, SNPs.137CommonSingle, SNPs.138CommonSingle,
    SNPs.141CommonSingle, SNPs.142CommonSingle, SNPs.144CommonSingle,
    SNPs.146CommonSingle, SNPs.147CommonSingle, SNPs.Illumina


Attaching package: ‘IlluminaHumanMethylationEPICv2anno.20a1.hg38’

The following objects are masked from ‘package:IlluminaHumanMethylationEPICanno.ilm10b4.hg19’:

    Islands.UCSC, Locations, Manifest, Other, SNPs.141CommonSingle,
    SNPs.142CommonSingle, SNPs.144CommonSingle, SNPs.146CommonSingle,
    SNPs.147CommonSingle, SNPs.Illumina

The following objects are masked from ‘package:IlluminaHumanMethylation450kanno.ilmn12.hg19’:

    Islands.UCSC, Locations, Manifest, Other, SNPs.141CommonSingle,
    SNPs.142CommonSingle, SNPs.144CommonSingle, SNPs.146CommonSingle,
    SNPs.147CommonSingle, SNPs.Illumina

> head(bed_data)  # View the first few rows
  chrom     start       end    probeID
1 chr20  61847650  61847650 cg18478105
2  chrX  24072640  24072640 cg09835024
3  chr9 131463936 131463936 cg14361672
4 chr17  80159506  80159506 cg01763666
5 chr14 105176736 105176736 cg12950382
6 chr13 115000168 115000168 cg02115394
> 
> # Use a different annotation version if available
> bed_data_v2 <- create_bedmeth(version = "v2")
> 
> 
> 
> cleanEx()

detaching ‘package:IlluminaHumanMethylationEPICv2anno.20a1.hg38’,
  ‘package:IlluminaHumanMethylationEPICanno.ilm10b4.hg19’,
  ‘package:IlluminaHumanMethylation450kanno.ilmn12.hg19’,
  ‘package:minfi’, ‘package:bumphunter’, ‘package:locfit’,
  ‘package:parallel’, ‘package:iterators’, ‘package:foreach’,
  ‘package:Biostrings’, ‘package:XVector’,
  ‘package:SummarizedExperiment’, ‘package:Biobase’,
  ‘package:MatrixGenerics’, ‘package:matrixStats’,
  ‘package:GenomicRanges’, ‘package:GenomeInfoDb’, ‘package:IRanges’,
  ‘package:S4Vectors’, ‘package:stats4’, ‘package:BiocGenerics’

> nameEx("iDMR_heatmap")
> ### * iDMR_heatmap
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: iDMR_heatmap
> ### Title: Generate Heatmap of Imprinted DMRs Methylation
> ### Aliases: iDMR_heatmap
> 
> ### ** Examples
> 
> # Example sampleInfo with "Case" and "Control" labels for each sample
> sampleInfo <- c(rep("Case", 10), rep("Control", 10))
> DMR_heatmap(df_ICR = my_ICR_data, sampleInfo = sampleInfo, annotation_col = list(Sample = c("darkgreen", "darkred")))
Error in DMR_heatmap(df_ICR = my_ICR_data, sampleInfo = sampleInfo, annotation_col = list(Sample = c("darkgreen",  : 
  could not find function "DMR_heatmap"
Execution halted
